runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
detach("package:plotly", unload=TRUE)
runApp()
runApp()
shiny::runApp()
runApp()
prenom[, max(nb_naiss)]
prenom[, min(nb_naiss)]
prenom[, is.na(nb_naiss)]
prenom[, sum(is.na(nb_naiss)]
prenom[, sum(is.na(nb_naiss))]
runApp()
plot(prenom[name %in% c("Nicolas")], aes(x = year, y = nb_naiss, color = sex)) +
geom_point()
runApp()
runApp()
runApp()
?ylim
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
prenom[, unique(year)]
prenom[, .unique(year)]
prenom[, .(unique(year))]
prenom[year >= 1901 & year <=1969, .(sum(nb_naiss)), by = name]
prenom[year >= 1901 & year <=1969, .(sum(nb_naiss)), by = name][order(V1)]
prenom[year >= 1901 & year <=1969, .(sum(nb_naiss)), by = name][order(-V1)]
prenom[year >= 1901 & year <=1969, .(sum(nb_naiss)), by = name][order(-V1)][1:10]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinythemes")
install.packages("shinydashboard")
runApp()
runApp()
?ggplotly
?plotly::ggplotly
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggplotly
?layout
runApp()
runApp()
runApp()
runApp()
?legend
runApp()
runApp()
runApp()
runApp()
runApp()
?guide_legend
runApp()
ggplot(prenom[name %in% c("Nicolas")], aes(x = year, y = nb_naiss, color = sex)) +
geom_point() +
facet_wrap(. ~ name, scales = "free") +
labs(x = "années",
y = "nombre de naissances") +
scale_color_manual(values = c("blue", "pink"),
labels = c("garçon", "fille")) +
theme_linedraw() +
guides(color = guide_legend(title = ""))
ggplotly(ggplot(prenom[name %in% c("Nicolas")], aes(x = year, y = nb_naiss, color = sex)) +
geom_point() +
facet_wrap(. ~ name, scales = "free") +
labs(x = "années",
y = "nombre de naissances") +
scale_color_manual(values = c("blue", "pink"),
labels = c("garçon", "fille")) +
theme_linedraw() +
guides(color = guide_legend(title = "")))
g <- ggplot(prenom[name == Nicolas], aes(x = year, y = nb_naiss, color = sex)) +
geom_point() +
scale_color_manual(values = c("blue", "pink"),
labels = c("garçon", "fille"))
g <- ggplot(prenom[name == "Nicolas"], aes(x = year, y = nb_naiss, color = sex)) +
geom_point() +
scale_color_manual(values = c("blue", "pink"),
labels = c("garçon", "fille"))
g
plotly::ggplotly(g)
rm(g)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(prenom)
runApp()
runApp()
runApp()
runApp()
runApp()
View(prenom)
prenom[sex == "boy", unique(name)]
prenom[sex == "boy", .(unique(name))]
prenom[sex == "boy", .(unique(name))][order(V1)]
prenom[sex == "girl", .(unique(name))][order(V1)]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(shiny::tags)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='nimberty',
token='42F3B1617E529B51B8F0CA6727115872',
secret='Vj7^sb1e3Od0p@sP')
rsconnect::setAccountInfo(name='nimberty',
token='42F3B1617E529B51B8F0CA6727115872',
secret='oFstzHlaRViMP4buTK3amizAQCDcdr9H1/2LNZGK')
library(rsconnect)
?save
library(data.table)
prenom <- fread("donnees/bnames2.csv.bz2")
naissance <- fread("donnees/births.csv")
prenom <- merge(prenom, naissance, by = c("year", "sex"))
prenom[, nb_naiss := prop * births]
liste_pre <- unique(prenom[order(name), .(name)])
rm(naissance)
save(prenom, liste_pre, file = "prenoms.RData")
save(prenom, liste_pre, file = "donnees/prenoms.RData")
rm(list = ls())
runApp()
rsconnect::setAccountInfo(name='nimberty',
token='42F3B1617E529B51B8F0CA6727115872',
secret='oFstzHlaRViMP4buTK3amizAQCDcdr9H1/2LNZGK')
library(rsconnect)
rsconnect::deployApp('Prenoms')
shiny::runApp()
rsconnect::setAccountInfo(name='nimberty',
token='42F3B1617E529B51B8F0CA6727115872',
secret='oFstzHlaRViMP4buTK3amizAQCDcdr9H1/2LNZGK')
library(rsconnect)
library(data.table)
prenom <- fread("donnees/nat2017.txt")
View(prenom)
str(prenom)
prenom[, .(unique(sexe))]
prenom[, .(unique(preusuel))]
# encodage pour Mac
Sys.setlocale("LC_ALL", locale = "fr_FR.UTF-8")
# soure : https://www.data.gouv.fr/fr/datasets/ficher-des-prenoms-de-1900-a-2017/
liste_prenom <- fread("donnees/nat2017.txt")
str(liste_prenom)
prenom[, .(unique(liste_prenom))]
str(liste_prenom)
liste_prenom[, .(unique(sexe))]
liste_prenom[, .(unique(preusuel))]
liste_prenom[, .(unique(annais))]
liste_prenom[, .(unique(nombre))]
apply(is.na(liste_prenom), 2, sum)
# soure : https://www.data.gouv.fr/fr/datasets/ficher-des-prenoms-de-1900-a-2017/
liste_prenoms <- fread("donnees/nat2017.txt")
rm(liste_prenom)
rm(prenom)
liste_prenoms[, .(sexe,
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
str(liste_prenoms)
liste_prenoms <- liste_prenoms[, .(sexe,
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
str(liste_prenoms)
apply(is.na(liste_prenoms), 2, sum)
liste_prenoms[, .(min(annee, na.rm = TRUE), max(annee, na.rm = TRUE))]
liste_prenoms[, .(min(annee, na.rm = TRUE), max(annee, na.rm = TRUE), frequency(annee, na.rm = TRUE))]
liste_prenoms[, .(min(annee, na.rm = TRUE), max(annee, na.rm = TRUE))]
liste_prenoms[, .N, by = annee]
verif_annee <- liste_prenoms[, .N, by = annee]
View(verif_annee)
apply(is.na(liste_prenoms), 2, sum)
liste_prenoms[is.na(prenom, )]
liste_prenoms[is.na(prenom), ]
liste_prenoms <- liste_prenoms[!is.na(prenom) & !is.na(annee), ]
apply(is.na(liste_prenoms), 2, sum)
liste_prenoms[, .(min(annee, na.rm = TRUE), max(annee, na.rm = TRUE))]
str(liste_prenoms)
verif_sexe <- liste_prenoms[, .(prenom), by = annee]
View(verif_sexe)
verif_sexe <- liste_prenoms[, .(prenom), by = sexe]
verif_sexe <- liste_prenoms[, .(unique(prenom), by = sexe]
verif_sexe <- liste_prenoms[, .(prenom), by = sexe]
verif_sexe <- unique(verif_sexe)
verif_sexe[sexe == 1]
verif_sexe[sexe == 2]
liste_prenoms <- liste_prenoms[, .(sexe = ifelse(sexe == 1, "Masculin", "Feminin"),
prenom, annee, nombre)]
View(liste_prenoms)
# soure : https://www.data.gouv.fr/fr/datasets/ficher-des-prenoms-de-1900-a-2017/
liste_prenoms <- fread("donnees/nat2017.txt")
str(liste_prenoms)
liste_prenoms <- liste_prenoms[, .(sexe,
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
apply(is.na(liste_prenoms), 2, sum)
liste_prenoms <- liste_prenoms[!is.na(prenom) & !is.na(annee), ]
liste_prenoms <- liste_prenoms[, .(sexe = ifelse(sexe == 1, "Masculin", "Feminin"),
prenom, annee, nombre)]
str(liste_prenoms)
apply(is.na(liste_prenoms), 2, sum)
rm(verif_annee, verif_sexe)
save(liste_prenoms, file = "donnees/liste_prenoms.RData")
liste_pre <- liste_prenoms[, .(unique(prenom))]
View(liste_pre)
shiny::runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
liste_prenoms[sexe == "Masculin", unique(prenom)]
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
ggplot(liste_prenoms, aes(x = annee, y = nombre)) +
geom_point() +
labs(x = "années",
y = "nombre de naissances") +
theme_linedraw() +
guides(color = guide_legend(title = ""))
ggplot(liste_prenoms, aes(x = annee, y = sum(nombre)) +
geom_point() +
labs(x = "années",
y = "nombre de naissances") +
theme_linedraw() +
guides(color = guide_legend(title = ""))
liste_prenoms[, .(sum(nombre)), by = annee]
evo_global <- liste_prenoms[, .(sum(nombre)), by = annee]
ggplot(evo_global, aes(x = annee, y = nombre) +
geom_point() +
labs(x = "années",
y = "nombre de naissances") +
theme_linedraw() +
guides(color = guide_legend(title = ""))
ggplot(evo_global, aes(x = annee, y = nombre)) +
geom_point() +
labs(x = "années",
y = "nombre de naissances") +
theme_linedraw() +
guides(color = guide_legend(title = ""))
ggplot(evo_global, aes(x = annee, y = nombre)) +
geom_point() +
labs(x = "années",
y = "nombre de naissances") +
theme_linedraw() +
guides(color = guide_legend(title = ""))
evo_global <- liste_prenoms[, .(nombre = sum(nombre)), by = annee]
ggplot(evo_global, aes(x = annee, y = nombre)) +
geom_point() +
labs(x = "années",
y = "nombre de naissances") +
theme_linedraw() +
guides(color = guide_legend(title = ""))
runApp('~/Desktop/Data scientist/Etude prénoms')
ggplot(evo_global, aes(x = annee, y = nombre), color = "blue") +
geom_point() +
geom_line() +
labs(x = "années",
y = "nombre de naissances") +
theme_linedraw() +
guides(color = guide_legend(title = ""))
ggplot(evo_global, aes(x = annee, y = nombre)) +
geom_point() +
geom_line(color = "blue") +
labs(x = "années",
y = "nombre de naissances") +
theme_linedraw() +
guides(color = guide_legend(title = ""))
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
liste_prenoms[, .(nombre = sum(nombre))]
runApp('~/Desktop/Data scientist/Etude prénoms')
liste_prenoms[prenom %in% input$input_prenom, nombre = sum(nombre), by = prenom]
liste_prenoms[, sum(nombre)]
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
# encodage pour Mac
Sys.setlocale("LC_ALL", locale = "fr_FR.UTF-8")
library(data.table)
# soure : https://www.data.gouv.fr/fr/datasets/ficher-des-prenoms-de-1900-a-2017/
liste_prenoms <- fread("donnees/nat2017.txt")
str(liste_prenoms)
liste_prenoms <- liste_prenoms[, .(sexe = ifelse(sexe == 1, "Masculin", "Feminin"),
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
apply(is.na(liste_prenoms), 2, sum)
liste_prenoms <- liste_prenoms[!is.na(prenom) & !is.na(annee), ]
# soure : https://www.data.gouv.fr/fr/datasets/ficher-des-prenoms-de-1900-a-2017/
liste_prenoms <- fread("donnees/nat2017.txt")
liste_prenoms[, .N, by = annee]
liste_prenoms[, .N, by = annais]
rm(list = ls())
# encodage pour Mac
Sys.setlocale("LC_ALL", locale = "fr_FR.UTF-8")
str(liste_prenoms)
library(data.table)
liste_prenoms <- fread("donnees/nat2017.txt")
str(liste_prenoms)
liste_prenoms <- liste_prenoms[, .(sexe = as.factor(ifelse(sexe == 1, "Masculin", "Feminin")),
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
str(liste_prenoms)
# on supprime les valeurs manquantes
apply(is.na(liste_prenoms), 2, sum)
liste_prenoms <- liste_prenoms[!is.na(prenom) & !is.na(annee), ]
source('~/Desktop/Data scientist/Etude prénoms/traitement.R', encoding = 'UTF-8', echo=TRUE)
shiny::runApp('~/Desktop/Data scientist/Etude prénoms')
shiny::runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
library(data.table)
liste_prenoms <- fread("donnees/nat2017.txt")
str(liste_prenoms)
liste_prenoms[preusuel != "_PRENOMS_RARES" & annais != "XXXX", ]
liste_prenoms[preusuel != "_PRENOMS_RARES" & annais != "XXXX", ]
liste_prenoms <- liste_prenoms[preusuel != "_PRENOMS_RARES" & annais != "XXXX", ]
liste_prenoms[, .(sexe = as.factor(ifelse(sexe == 1, "Masculin", "Feminin")),
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
liste_prenoms
liste_prenoms <- liste_prenoms[, .(sexe = as.factor(ifelse(sexe == 1, "Masculin", "Feminin")),
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
View(liste_prenoms)
liste_prenoms
# on supprime les valeurs manquantes
apply(is.na(liste_prenoms), 2, sum)
# vérificaztion des valeurs manquantes
apply(is.na(liste_prenoms), 2, sum)
summary(liste_prenoms, na.rm = TRUE)
liste_prenoms_dep <- fread("donnees/dpt2017.txt")
View(liste_prenoms_dep)
str(liste_prenoms)
View(liste_prenoms_dep)
str(liste_prenoms_dep)
liste_prenoms <- liste_prenoms[preusuel != "_PRENOMS_RARES" | annais != "XXXX", ]
library(data.table)
liste_prenoms <- fread("donnees/nat2017.txt")
liste_prenoms <- liste_prenoms[preusuel != "_PRENOMS_RARES" | annais != "XXXX", ]
View(liste_prenoms)
liste_prenoms_dep <- liste_prenoms_dep[preusuel != "_PRENOMS_RARES" & annais != "XXXX" & dpt != "XX", ]
liste_prenoms_dep <- liste_prenoms_dep[, .(sexe = as.factor(ifelse(sexe == 1, "Masculin", "Feminin")),
prenom = preusuel,
annee = as.numeric(annais),
dpt,
nombre)]
liste_prenoms_dep
# vérificaztion des valeurs manquantes
apply(is.na(liste_prenoms_dep), 2, sum)
summary(liste_prenoms_dep, na.rm = TRUE)
library(data.table)
liste_prenoms <- fread("donnees/nat2017.txt")
str(liste_prenoms)
liste_prenoms <- liste_prenoms[preusuel != "_PRENOMS_RARES" & annais != "XXXX", ]
liste_prenoms <- liste_prenoms[, .(sexe = as.factor(ifelse(sexe == 1, "Masculin", "Feminin")),
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
# vérification des valeurs manquantes
apply(is.na(liste_prenoms), 2, sum)
summary(liste_prenoms, na.rm = TRUE)
liste_prenoms_dep <- fread("donnees/dpt2017.txt")
str(liste_prenoms_dep)
liste_prenoms_dep <- liste_prenoms_dep[preusuel != "_PRENOMS_RARES" & annais != "XXXX" & dpt != "XX", ]
liste_prenoms_dep <- liste_prenoms_dep[, .(sexe = as.factor(ifelse(sexe == 1, "Masculin", "Feminin")),
prenom = preusuel,
annee = as.numeric(annais),
dpt,
nombre)]
# vérification des valeurs manquantes
apply(is.na(liste_prenoms_dep), 2, sum)
summary(liste_prenoms_dep, na.rm = TRUE)
save(liste_prenoms, liste_prenoms_dep, file = ""donnees/prenoms.RData")
save(liste_prenoms, liste_prenoms_dep, file = donnees/prenoms.RData")
save(liste_prenoms, liste_prenoms_dep, file = "donnees/prenoms.RData")
shiny::runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
View(liste_prenoms_dep)
devtools::install_github("antuki/CARTElette/CARTElette@RPackage")
devtools::install_github("antuki/CARTElette/CARTElette@RPackage")
loadMap(COG=2016,nivsupra="ZE2010")
par(mar=c(0,0,0,0))
plot(sf::st_geometry(ZE_sf))
library(CARTElette)
loadMap(COG=2016,nivsupra="ZE2010")
par(mar=c(0,0,0,0))
plot(sf::st_geometry(ZE_sf))
detach("package:CARTElette", unload = TRUE)
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
runApp('~/Desktop/Data scientist/Etude prénoms')
load("~/Documents/Science de données/Etude prénoms/donnees/prenoms.RData")
View(liste_prenoms)
View(liste_prenoms_dep)
library(data.table)
liste_prenoms2 <- fread("donnees/nat2018.tcsv")
liste_prenoms2 <- fread("donnees/nat2018.csv")
View(liste_prenoms2)
liste_prenoms2 <- liste_prenoms2[preusuel != "_PRENOMS_RARES" & annais != "XXXX", ]
liste_prenoms2 <- liste_prenoms2[, .(sexe = as.factor(ifelse(sexe == 1, "Masculin", "Feminin")),
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
apply(is.na(liste_prenoms2), 2, sum)
test <- liste_prenoms2[annee < 2018,,]
test
liste_prenoms
summary(liste_prenoms2)
summary(liste_prenoms)
summary(test)
liste_prenoms_dep2 <- fread("donnees/dpt2018.csv")
View(liste_prenoms_dep2)
library(data.table)
liste_prenoms <- fread("donnees/nat2018.csv")
str(liste_prenoms)
liste_prenoms <- liste_prenoms[preusuel != "_PRENOMS_RARES" & annais != "XXXX", ]
liste_prenoms <- liste_prenoms[, .(sexe = as.factor(ifelse(sexe == 1, "Masculin", "Feminin")),
prenom = preusuel,
annee = as.numeric(annais),
nombre)]
# vérification des valeurs manquantes
apply(is.na(liste_prenoms), 2, sum)
summary(liste_prenoms, na.rm = TRUE)
liste_prenoms[nombre==53706,,]
liste_prenoms_dep <- fread("donnees/dpt2018.csv")
str(liste_prenoms_dep)
liste_prenoms_dep <- liste_prenoms_dep[preusuel != "_PRENOMS_RARES" & annais != "XXXX" & dpt != "XX", ]
liste_prenoms_dep <- liste_prenoms_dep[, .(sexe = as.factor(ifelse(sexe == 1, "Masculin", "Feminin")),
prenom = preusuel,
annee = as.numeric(annais),
dpt,
nombre)]
# vérification des valeurs manquantes
apply(is.na(liste_prenoms_dep), 2, sum)
summary(liste_prenoms_dep, na.rm = TRUE)
save(list = ls(), file = "donnees/prenoms.RData")
shiny::runApp()
runApp()
runApp()
